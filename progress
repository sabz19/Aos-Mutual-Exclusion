#!/bin/bash

PROJDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

TEMP=.progresstemp

NETID=$(cat $PROJDIR/.netidtemp)
DOMAIN=utdallas.edu

#command line arguments
CONFIGPATH=$PROJDIR/config
CONFIG=$CONFIGPATH/$(cat $PROJDIR/.configtemp)

PROJDIRSCRIPT='$(echo $AOSMEROOT)'
REMOTEOUT=$PROJDIRSCRIPT/out

printed=0
done=0
total=0

COLS=$(stty size | cut -f2 -d" ")

cat $CONFIG | sed -e "s/#.*//" | sed -e "/^\s*$/d" |
(
	read i
	nodes=$(echo $i | cut -f1 -d" ")
	ird=$(echo $i | cut -f2 -d" ")
	cset=$(echo $i | cut -f3 -d" ")
	mesgs=$(echo $i | cut -f4 -d" ")
    total=$(($nodes * $mesgs))
    
    touch $TEMP
    echo $done > $TEMP
    
    while [ $(cat $TEMP) -lt $total ]; do
    (
        sleep 3
        n=0
        EXC=""
        while [ $n -lt $nodes ]; do
            EXC+="cat $REMOTEOUT/Kern$n.out 2>/dev/null; echo;"
            n=$(($n + 1))
        done
        done=$( ( ssh $NETID@dc01.$DOMAIN "$EXC" | grep Granting | wc | sed 's/^ *//' | cut -f1 -d' ' ) )
        donecolsprod=$(($done * $COLS))
        bars=$(($donecolsprod / $total))
        toprint=$(($bars - $printed))
        printf "\r"
        eval "printf '%0.s=' {1..$toprint}"
        echo $done > $TEMP
    )
    done
    
    rm $TEMP
    
    sleep 4
    timestamps=$(./outerr | grep Granting | uniq | wc | sed 's/^[\t ]*//g' | cut -d" " -f1)
    if [ $timestamps -eq $total ]; then
        echo Checks passed.
        echo Number of nodes: $nodes
        echo Requests per node: $mesgs
        echo Mean inter-request delay '('milliseconds')': $ird
        echo Mean critical section time '('milliseconds')': $cset
        echo Requests satisfied: $timestamps
        exectime=$(./kernouterr | grep active | head -1 | cut -d" " -f4)
        echo Time network was active '('seconds')': $exectime
        echo 'Throughput (requests per second):' $(($total / $exectime))
        echo Messages sent: $(./kernouterr | grep Messages | cut -d" " -f3 | awk '{s+=$1} END {print s}')
        totalresponsetime=$(./appouterr | grep Response | cut -d" " -f 3 | awk '{s+=$1} END {print s}')
        echo Average response time '('milliseconds')': $(($totalresponsetime / $timestamps))
    else
        echo The number of timestamps '('$timestamps')' did not match the expected number '('$total')'.
    fi

)
